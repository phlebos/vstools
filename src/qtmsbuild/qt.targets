<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <QtWorkFilePath Condition="'$(QtWorkFilePath)' == ''">$([System.IO.Path]::Combine($(ProjectDir),$(IntDir)qt.txt))</QtWorkFilePath>
    <QtLogFilePath Condition="'$(QtLogFilePath)' == ''">$([System.IO.Path]::Combine($(ProjectDir),$(IntDir)qt.log))</QtLogFilePath>
    <QtMaxProcs Condition="'$(QtMaxProcs)' == ''">$([System.Environment]::ProcessorCount)</QtMaxProcs>
    <QtDebug Condition="'$(QtDebug)' == ''">false</QtDebug>
  </PropertyGroup>
  <Target Name="QtPrepare" AfterTargets="CustomBuild" BeforeTargets="ClCompile">
    <Message Importance="High" Condition="'$(QtDebug)' == 'true'" Text="# BEGIN Qt" />
    <Message Importance="High" Condition="'$(QtDebug)' == 'true'" Text="## QtPrepare" />
    <Delete Files="$(QtWorkFilePath)"/>
    <Delete Condition="'$(SelectedFiles)' == '%(QtMoc.Identity)'" Files="%(QtMoc.OutputFile)" />
    <Delete Condition="'$(SelectedFiles)' == '%(QtRcc.Identity)'" Files="%(QtRcc.OutputFile)" />
    <Delete Condition="'$(SelectedFiles)' == '%(QtUic.Identity)'" Files="%(QtUic.OutputFile)" />
    <ReadLinesFromFile File="$(QtLogFilePath)">
      <Output TaskParameter="Lines" ItemName="QtLogData"/>
    </ReadLinesFromFile>
    <ItemGroup Condition="'@(QtLogData)' != ''">
      <QtLog
        Include="@(QtLogData->'$([System.String]::Copy('%(QtLogData.Identity)').Split('|')[0])')">
        <Options>$([System.String]::Copy('%(QtLogData.Identity)').Split('|')[1])</Options>
      </QtLog>
    </ItemGroup>
  </Target>
  <ItemGroup>
    <PropertyPageSchema
      Include="$(MSBuildThisFileDirectory)$(MSBuildThisFileName)moc.xml" />
    <AvailableItemName Include="QtMoc">
      <Targets>QtMoc</Targets>
    </AvailableItemName>
  </ItemGroup>
  <Target
    Name="QtMocCheckInput"
    Condition="'@(QtMoc)' != ''"
    Inputs="%(QtMoc.FullPath);%(QtMoc.AdditionalDependencies)"
    Outputs="@(QtMoc-&gt;'%(OutputFile)')"
    DependsOnTargets="QtPrepare">
    <CreateProperty Value="true">
      <Output TaskParameter="ValueSetByTask" PropertyName="QtMocInputOutdated" />
    </CreateProperty>
    <PropertyGroup>
      <QtMocIdentity>%(QtMoc.Identity)</QtMocIdentity>
    </PropertyGroup>
    <ItemGroup Condition="'@(QtMoc)' != ''">
      <QtMoc Condition="'%(QtMoc.Identity)'=='$(QtMocIdentity)'">
        <InputOutdated>$(QtMocInputOutdated)</InputOutdated>
      </QtMoc>
    </ItemGroup>
  </Target>
  <Target
    Name="QtMocWriteTlogs"
    Condition="'@(QtMoc)' != '' and '@(SelectedFiles)' == ''">
    <ItemGroup>
      <QtMocReadTlog Include="^%(QtMoc.FullPath);%(QtMoc.AdditionalDependencies)"
        Condition="'%(QtMoc.ExcludedFromBuild)' != 'true' and '%(QtMoc.OutputFile)' != ''"/>
      <QtMocWriteTlog Include="^%(QtMoc.FullPath);$([System.IO.Path]::Combine('$(MSBuildProjectDirectory)', '%(QtMoc.OutputFile)'))"
        Condition="'%(QtMoc.ExcludedFromBuild)' != 'true' and '%(QtMoc.OutputFile)' != ''"/>
    </ItemGroup>
    <WriteLinesToFile
      Condition="'@(QtMocReadTlog)' != ''"
      File="$(TLogLocation)QtMoc.read.1u.tlog"
      Lines="@(QtMocReadTlog->MetaData('Identity')->ToUpperInvariant());"
      Overwrite="true"
      Encoding="Unicode"/>
    <WriteLinesToFile
      Condition="'@(QtMocWriteTlog)' != ''"
      File="$(TLogLocation)QtMoc.write.1u.tlog"
      Lines="@(QtMocWriteTlog->MetaData('Identity')->ToUpperInvariant());"
      Overwrite="true"
      Encoding="Unicode"/>
  </Target>
  <Target
    Name="QtMoc"
    BeforeTargets="$(QtMocBeforeTargets)"
    AfterTargets="$(QtMocAfterTargets)"
    Condition="'@(QtMoc)' != ''"
    Inputs="%(QtMoc.FullPath);%(QtMoc.AdditionalDependencies);$(MSBuildProjectFile)"
    Outputs="@(QtMoc-&gt;'%(OutputFile)')"
    DependsOnTargets="$(QtMocDependsOn);QtMocCheckInput;QtMocWriteTlogs">
    <Message Importance="High" Condition="'$(QtDebug)' == 'true'" Text="## QtMoc @(QtMoc)" />
    <ItemGroup Condition="'@(SelectedFiles)' != ''">
      <QtMoc Remove="@(QtMoc)" Condition="'%(Identity)' != '@(SelectedFiles)'" />
    </ItemGroup>
    <ItemGroup>
      <QtMoc_tlog
        Include="%(QtMoc.OutputFile)"
        Condition="'%(QtMoc.OutputFile)' != '' and '%(QtMoc.ExcludedFromBuild)' != 'true'">
        <Source>@(QtMoc, '|')</Source>
      </QtMoc_tlog>
    </ItemGroup>
    <WriteLinesToFile
      Condition="'@(QtMoc_tlog)' != '' and '%(QtMoc_tlog.ExcludedFromBuild)' != 'true'"
      File="$(TLogLocation)$(ProjectName).write.1u.tlog"
      Lines="^%(QtMoc_tlog.Source);@(QtMoc_tlog-&gt;'%(Fullpath)')"
      Encoding="Unicode"/>
    <MakeDir
      Condition="'@(QtMoc)' != '' and '%(QtMoc.ExcludedFromBuild)' != 'true'"
      Directories="$([System.IO.Path]::GetDirectoryName(%(QtMoc.OutputFile)))"/>
    <ItemGroup>
      <QtMoc_InputFile Condition="'%(QtMoc.InputFile)' != ''" Include="%(QtMoc.InputFile)"/>
      <QtMoc_OutputFile Condition="'%(QtMoc.OutputFile)' != ''" Include="%(QtMoc.OutputFile)"/>
      <QtMoc_IncludePath Condition="'%(QtMoc.IncludePath)' != ''" Include="%(QtMoc.IncludePath)"/>
      <QtMoc_MacFramework Condition="'%(QtMoc.MacFramework)' != ''" Include="%(QtMoc.MacFramework)"/>
      <QtMoc_PreprocessOnly Condition="'%(QtMoc.PreprocessOnly)' != ''" Include="%(QtMoc.PreprocessOnly)"/>
      <QtMoc_Define Condition="'%(QtMoc.Define)' != ''" Include="%(QtMoc.Define)"/>
      <QtMoc_Undefine Condition="'%(QtMoc.Undefine)' != ''" Include="%(QtMoc.Undefine)"/>
      <QtMoc_Metadata Condition="'%(QtMoc.Metadata)' != ''" Include="%(QtMoc.Metadata)"/>
      <QtMoc_CompilerFlavor Condition="'%(QtMoc.CompilerFlavor)' != ''" Include="%(QtMoc.CompilerFlavor)"/>
      <QtMoc_NoInclude Condition="'%(QtMoc.NoInclude)' != ''" Include="%(QtMoc.NoInclude)"/>
      <QtMoc_PathPrefix Condition="'%(QtMoc.PathPrefix)' != ''" Include="%(QtMoc.PathPrefix)"/>
      <QtMoc_ForceInclude Condition="'%(QtMoc.ForceInclude)' != ''" Include="%(QtMoc.ForceInclude)"/>
      <QtMoc_PrependInclude Condition="'%(QtMoc.PrependInclude)' != ''" Include="%(QtMoc.PrependInclude)"/>
      <QtMoc_Include Condition="'%(QtMoc.Include)' != ''" Include="%(QtMoc.Include)"/>
      <QtMoc_NoNotesWarnings Condition="'%(QtMoc.NoNotesWarnings)' != ''" Include="%(QtMoc.NoNotesWarnings)"/>
      <QtMoc_NoNotes Condition="'%(QtMoc.NoNotes)' != ''" Include="%(QtMoc.NoNotes)"/>
      <QtMoc_NoWarnings Condition="'%(QtMoc.NoWarnings)' != ''" Include="%(QtMoc.NoWarnings)"/>
      <QtMoc_IgnoreConflicts Condition="'%(QtMoc.IgnoreConflicts)' != ''" Include="%(QtMoc.IgnoreConflicts)"/>
      <QtMoc_OptionsFile Condition="'%(QtMoc.OptionsFile)' != ''" Include="%(QtMoc.OptionsFile)"/>
    </ItemGroup>
    <ItemGroup>
      <QtMoc_Define>
        <Escaped Condition="$([System.String]::Copy('%(Identity)').Contains(' ')) OR $([System.String]::Copy('%(Identity)').Contains('&quot;'))"> &quot;$([System.String]::Copy('%(Identity)').Replace('&quot;','\&quot;'))&quot;</Escaped>
        <Escaped Condition="!$([System.String]::Copy('%(Identity)').Contains(' ')) AND !$([System.String]::Copy('%(Identity)').Contains('&quot;'))">%(Identity)</Escaped>
      </QtMoc_Define>
      <QtMoc_IncludePath>
        <Escaped Condition="$([System.String]::Copy('%(Identity)').EndsWith('\'))">%(Identity)\</Escaped>
        <Escaped Condition="!$([System.String]::Copy('%(Identity)').EndsWith('\'))">%(Identity)</Escaped>
      </QtMoc_IncludePath>
      <QtMoc_PathPrefix>
        <Escaped Condition="$([System.String]::Copy('%(Identity)').EndsWith('\'))">%(Identity)\</Escaped>
        <Escaped Condition="!$([System.String]::Copy('%(Identity)').EndsWith('\'))">%(Identity)</Escaped>
      </QtMoc_PathPrefix>
    </ItemGroup>
    <PropertyGroup>
      <QtMocOptions Condition="'@(QtMoc_InputFile)' != ''">$(QtMocOptions);@(QtMoc_InputFile->'&quot;%(Identity)&quot;')</QtMocOptions>
      <QtMocOptions Condition="'@(QtMoc_OutputFile)' != ''">$(QtMocOptions);@(QtMoc_OutputFile->'-o &quot;%(Identity)&quot;')</QtMocOptions>
      <QtMocOptions Condition="'@(QtMoc_IncludePath)' != ''">$(QtMocOptions);@(QtMoc_IncludePath->'&quot;-I%(Escaped)&quot;')</QtMocOptions>
      <QtMocOptions Condition="'@(QtMoc_MacFramework)' != ''">$(QtMocOptions);@(QtMoc_MacFramework->'-F &quot;%(Identity)&quot;')</QtMocOptions>
      <QtMocOptions Condition="'@(QtMoc_PreprocessOnly)' == 'true'">$(QtMocOptions);-E</QtMocOptions>
      <QtMocOptions Condition="'@(QtMoc_Define)' != ''">$(QtMocOptions);@(QtMoc_Define->'-D%(Escaped)')</QtMocOptions>
      <QtMocOptions Condition="'@(QtMoc_Undefine)' != ''">$(QtMocOptions);@(QtMoc_Undefine->'-U%(Identity)')</QtMocOptions>
      <QtMocOptions Condition="'@(QtMoc_Metadata)' != ''">$(QtMocOptions);@(QtMoc_Metadata->'-M%(Identity)')</QtMocOptions>
      <QtMocOptions Condition="'@(QtMoc_CompilerFlavor)' != ''">$(QtMocOptions);@(QtMoc_CompilerFlavor->'--compiler-flavor %(Identity)')</QtMocOptions>
      <QtMocOptions Condition="'@(QtMoc_NoInclude)' == 'true'">$(QtMocOptions);-i</QtMocOptions>
      <QtMocOptions Condition="'@(QtMoc_PathPrefix)' != ''">$(QtMocOptions);@(QtMoc_PathPrefix->'&quot;-p%(Escaped)&quot;')</QtMocOptions>
      <QtMocOptions Condition="'@(QtMoc_ForceInclude)' != ''">$(QtMocOptions);@(QtMoc_ForceInclude->'-f &quot;%(Identity)&quot;')</QtMocOptions>
      <QtMocOptions Condition="'@(QtMoc_PrependInclude)' != ''">$(QtMocOptions);@(QtMoc_PrependInclude->'-b &quot;%(Identity)&quot;')</QtMocOptions>
      <QtMocOptions Condition="'@(QtMoc_Include)' != ''">$(QtMocOptions);@(QtMoc_Include->'--include &quot;%(Identity)&quot;')</QtMocOptions>
      <QtMocOptions Condition="'@(QtMoc_NoNotesWarnings)' != ''">$(QtMocOptions);@(QtMoc_NoNotesWarnings->'-n%(Identity)')</QtMocOptions>
      <QtMocOptions Condition="'@(QtMoc_NoNotes)' == 'true'">$(QtMocOptions);--no-notes</QtMocOptions>
      <QtMocOptions Condition="'@(QtMoc_NoWarnings)' == 'true'">$(QtMocOptions);--no-warnings</QtMocOptions>
      <QtMocOptions Condition="'@(QtMoc_IgnoreConflicts)' == 'true'">$(QtMocOptions);--ignore-option-clashes</QtMocOptions>
      <QtMocOptions Condition="'@(QtMoc_OptionsFile)' != ''">$(QtMocOptions);@(QtMoc_OptionsFile->'&quot;@%(Identity)&quot;')</QtMocOptions>
      <QtMocOptions>$(QtMocOptions.Replace(';',' ').Trim())</QtMocOptions>
      <QtMocInputOutdated Condition="'@(SelectedFiles)' == ''">%(QtMoc.InputOutdated)</QtMocInputOutdated>
      <QtMocInputOutdated Condition="'@(SelectedFiles)' != ''">true</QtMocInputOutdated>
    </PropertyGroup>
    <FindInList Condition="'$(QtMocInputOutdated)' != 'true'"
      CaseSensitive="false" List="@(QtLog)" ItemSpecToFind="%(QtMoc.Identity)">
      <Output TaskParameter="ItemFound" ItemName="QtMocLogEntry"/>
    </FindInList>
    <PropertyGroup Condition="'@(QtMocLogEntry)' != ''">
      <QtMocLogOptions>%(QtMocLogEntry.Options)</QtMocLogOptions>
    </PropertyGroup>
    <PropertyGroup>
      <QtMocOutdated Condition="'$(QtMocInputOutdated)' == 'true' or ('$(QtMocLogOptions)' != '' and '$(QtMocOptions)' != '$(QtMocLogOptions)')">true</QtMocOutdated>
    </PropertyGroup>
    <ItemGroup Condition="'$(QtMocOutdated)' == 'true'">
      <QtLog Remove="%(QtMoc.Identity)"/>
      <QtLog Include="%(QtMoc.Identity)">
        <Options>$(QtMocOptions)</Options>
      </QtLog>
    </ItemGroup>
    <PropertyGroup>
      <QtMocRunParallel Condition="'@(QtMoc)' != '' and '%(QtMoc.ExcludedFromBuild)' != 'true' and '%(QtMoc.ParallelProcess)' == 'true' and '@(SelectedFiles)' == '' and '$(QtMocOutdated)' == 'true'">true</QtMocRunParallel>
      <QtMocRunSingle Condition="'@(QtMoc)' != '' and '%(QtMoc.ExcludedFromBuild)' != 'true' and ('%(QtMoc.ParallelProcess)' != 'true' or '@(SelectedFiles)' != '') and '$(QtMocOutdated)' == 'true'">true</QtMocRunSingle>
    </PropertyGroup>
    <QtWork
      Condition="'$(QtMocRunParallel)' == 'true'"
      WorkFilePath="$(QtWorkFilePath)"
      ExecDescription="%(QtMoc.ExecutionDescription)"
      ExecPath="%(QtMoc.QTDIR)\bin\moc.exe"
      ExecArguments="$(QtMocOptions)"
      ParallelProcess="true"
      QtDebug="$(QtDebug)"/>
    <QtWork
      Condition="'$(QtMocRunSingle)' == 'true'"
      WorkFilePath="$(QtWorkFilePath)"
      ExecDescription="%(QtMoc.ExecutionDescription)"
      ExecPath="%(QtMoc.QTDIR)\bin\moc.exe"
      ExecArguments="$(QtMocOptions)"
      ParallelProcess="false"
      QtDebug="$(QtDebug)"/>
    <WriteLinesToFile
      Condition="'$(QtMocRunSingle)' == 'true'"
      File="$(QtLogFilePath)"
      Lines="@(QtLog->'%(Identity)|%(Options)')"
      Overwrite="true"/>
  </Target>
  <Target Name="QtMocPrep" BeforeTargets="QtMoc" Condition="'@(QtMoc)' != ''">
    <Message Importance="High" Condition="'$(QtDebug)' == 'true'" Text="## QtMocPrep @(QtMoc)" />
    <ItemGroup>
      <QtMoc
        Remove="@(QtMoc)"
        Condition="'@(QtMoc)' != '' and '%(QtMoc.ExcludedFromBuild)' == 'true' and '@(SelectedFiles)' == ''"/>
    </ItemGroup>
  </Target>
  <ItemGroup>
    <PropertyPageSchema
      Include="$(MSBuildThisFileDirectory)$(MSBuildThisFileName)rcc.xml" />
    <AvailableItemName Include="QtRcc">
      <Targets>QtRcc</Targets>
    </AvailableItemName>
  </ItemGroup>
  <Target
    Name="QtRccCheckInput"
    Condition="'@(QtRcc)' != ''"
    Inputs="%(QtRcc.FullPath);%(QtRcc.AdditionalDependencies)"
    Outputs="@(QtRcc-&gt;'%(OutputFile)')"
    DependsOnTargets="QtMoc">
    <CreateProperty Value="true">
      <Output TaskParameter="ValueSetByTask" PropertyName="QtRccInputOutdated" />
    </CreateProperty>
    <PropertyGroup>
      <QtRccIdentity>%(QtRcc.Identity)</QtRccIdentity>
    </PropertyGroup>
    <ItemGroup Condition="'@(QtRcc)' != ''">
      <QtRcc Condition="'%(QtRcc.Identity)'=='$(QtRccIdentity)'">
        <InputOutdated>$(QtRccInputOutdated)</InputOutdated>
      </QtRcc>
    </ItemGroup>
  </Target>
  <Target
    Name="QtRccWriteTlogs"
    Condition="'@(QtRcc)' != '' and '@(SelectedFiles)' == ''">
    <ItemGroup>
      <QtRccReadTlog Include="^%(QtRcc.FullPath);%(QtRcc.AdditionalDependencies)"
        Condition="'%(QtRcc.ExcludedFromBuild)' != 'true' and '%(QtRcc.OutputFile)' != ''"/>
      <QtRccWriteTlog Include="^%(QtRcc.FullPath);$([System.IO.Path]::Combine('$(MSBuildProjectDirectory)', '%(QtRcc.OutputFile)'))"
        Condition="'%(QtRcc.ExcludedFromBuild)' != 'true' and '%(QtRcc.OutputFile)' != ''"/>
    </ItemGroup>
    <WriteLinesToFile
      Condition="'@(QtRccReadTlog)' != ''"
      File="$(TLogLocation)QtRcc.read.1u.tlog"
      Lines="@(QtRccReadTlog->MetaData('Identity')->ToUpperInvariant());"
      Overwrite="true"
      Encoding="Unicode"/>
    <WriteLinesToFile
      Condition="'@(QtRccWriteTlog)' != ''"
      File="$(TLogLocation)QtRcc.write.1u.tlog"
      Lines="@(QtRccWriteTlog->MetaData('Identity')->ToUpperInvariant());"
      Overwrite="true"
      Encoding="Unicode"/>
  </Target>
  <Target
    Name="QtRcc"
    BeforeTargets="$(QtRccBeforeTargets)"
    AfterTargets="$(QtRccAfterTargets)"
    Condition="'@(QtRcc)' != ''"
    Inputs="%(QtRcc.FullPath);%(QtRcc.AdditionalDependencies);$(MSBuildProjectFile)"
    Outputs="@(QtRcc-&gt;'%(OutputFile)')"
    DependsOnTargets="$(QtRccDependsOn);QtRccCheckInput;QtRccWriteTlogs">
    <Message Importance="High" Condition="'$(QtDebug)' == 'true'" Text="## QtRcc @(QtRcc)" />
    <ItemGroup Condition="'@(SelectedFiles)' != ''">
      <QtRcc Remove="@(QtRcc)" Condition="'%(Identity)' != '@(SelectedFiles)'" />
    </ItemGroup>
    <ItemGroup>
      <QtRcc_tlog
        Include="%(QtRcc.OutputFile)"
        Condition="'%(QtRcc.OutputFile)' != '' and '%(QtRcc.ExcludedFromBuild)' != 'true'">
        <Source>@(QtRcc, '|')</Source>
      </QtRcc_tlog>
    </ItemGroup>
    <WriteLinesToFile
      Condition="'@(QtRcc_tlog)' != '' and '%(QtRcc_tlog.ExcludedFromBuild)' != 'true'"
      File="$(TLogLocation)$(ProjectName).write.1u.tlog"
      Lines="^%(QtRcc_tlog.Source);@(QtRcc_tlog-&gt;'%(Fullpath)')"
      Encoding="Unicode"/>
    <MakeDir
      Condition="'@(QtRcc)' != '' and '%(QtRcc.ExcludedFromBuild)' != 'true'"
      Directories="$([System.IO.Path]::GetDirectoryName(%(QtRcc.OutputFile)))"/>
    <ItemGroup>
      <QtRcc_InputFile Condition="'%(QtRcc.InputFile)' != ''" Include="%(QtRcc.InputFile)"/>
      <QtRcc_OutputFile Condition="'%(QtRcc.OutputFile)' != ''" Include="%(QtRcc.OutputFile)"/>
      <QtRcc_TempFile Condition="'%(QtRcc.TempFile)' != ''" Include="%(QtRcc.TempFile)"/>
      <QtRcc_InitFuncName Condition="'%(QtRcc.InitFuncName)' != ''" Include="%(QtRcc.InitFuncName)"/>
      <QtRcc_Root Condition="'%(QtRcc.Root)' != ''" Include="%(QtRcc.Root)"/>
      <QtRcc_Compression Condition="'%(QtRcc.Compression)' != ''" Include="%(QtRcc.Compression)"/>
      <QtRcc_NoCompression Condition="'%(QtRcc.NoCompression)' != ''" Include="%(QtRcc.NoCompression)"/>
      <QtRcc_CompressThreshold Condition="'%(QtRcc.CompressThreshold)' != ''" Include="%(QtRcc.CompressThreshold)"/>
      <QtRcc_BinaryOutput Condition="'%(QtRcc.BinaryOutput)' != ''" Include="%(QtRcc.BinaryOutput)"/>
      <QtRcc_PassNumber Condition="'%(QtRcc.PassNumber)' != ''" Include="%(QtRcc.PassNumber)"/>
      <QtRcc_NoNamespace Condition="'%(QtRcc.NoNamespace)' != ''" Include="%(QtRcc.NoNamespace)"/>
      <QtRcc_Verbose Condition="'%(QtRcc.Verbose)' != ''" Include="%(QtRcc.Verbose)"/>
      <QtRcc_List Condition="'%(QtRcc.List)' != ''" Include="%(QtRcc.List)"/>
      <QtRcc_Project Condition="'%(QtRcc.Project)' != ''" Include="%(QtRcc.Project)"/>
      <QtRcc_FormatVersion Condition="'%(QtRcc.FormatVersion)' != ''" Include="%(QtRcc.FormatVersion)"/>
    </ItemGroup>
    <ItemGroup>
      <QtRcc_Root>
        <Escaped Condition="$([System.String]::Copy('%(Identity)').EndsWith('\'))">%(Identity)\</Escaped>
        <Escaped Condition="!$([System.String]::Copy('%(Identity)').EndsWith('\'))">%(Identity)</Escaped>
      </QtRcc_Root>
    </ItemGroup>
    <PropertyGroup>
      <QtRccOptions Condition="'@(QtRcc_InputFile)' != ''">$(QtRccOptions);@(QtRcc_InputFile->'&quot;%(Identity)&quot;')</QtRccOptions>
      <QtRccOptions Condition="'@(QtRcc_OutputFile)' != ''">$(QtRccOptions);@(QtRcc_OutputFile->'-o &quot;%(Identity)&quot;')</QtRccOptions>
      <QtRccOptions Condition="'@(QtRcc_TempFile)' != ''">$(QtRccOptions);@(QtRcc_TempFile->'--temp &quot;%(Identity)&quot;')</QtRccOptions>
      <QtRccOptions Condition="'@(QtRcc_InitFuncName)' != ''">$(QtRccOptions);@(QtRcc_InitFuncName->'--name %(Identity)')</QtRccOptions>
      <QtRccOptions Condition="'@(QtRcc_Root)' != ''">$(QtRccOptions);@(QtRcc_Root->'--root &quot;%(Escaped)&quot;')</QtRccOptions>
      <QtRccOptions Condition="'@(QtRcc_Compression)' == 'level1'">$(QtRccOptions);--compress 1</QtRccOptions>
      <QtRccOptions Condition="'@(QtRcc_Compression)' == 'level2'">$(QtRccOptions);--compress 2</QtRccOptions>
      <QtRccOptions Condition="'@(QtRcc_Compression)' == 'level3'">$(QtRccOptions);--compress 3</QtRccOptions>
      <QtRccOptions Condition="'@(QtRcc_Compression)' == 'level4'">$(QtRccOptions);--compress 4</QtRccOptions>
      <QtRccOptions Condition="'@(QtRcc_Compression)' == 'level5'">$(QtRccOptions);--compress 5</QtRccOptions>
      <QtRccOptions Condition="'@(QtRcc_Compression)' == 'level6'">$(QtRccOptions);--compress 6</QtRccOptions>
      <QtRccOptions Condition="'@(QtRcc_Compression)' == 'level7'">$(QtRccOptions);--compress 7</QtRccOptions>
      <QtRccOptions Condition="'@(QtRcc_Compression)' == 'level8'">$(QtRccOptions);--compress 8</QtRccOptions>
      <QtRccOptions Condition="'@(QtRcc_Compression)' == 'level9'">$(QtRccOptions);--compress 9</QtRccOptions>
      <QtRccOptions Condition="'@(QtRcc_NoCompression)' == 'true'">$(QtRccOptions);--no-compress</QtRccOptions>
      <QtRccOptions Condition="'@(QtRcc_CompressThreshold)' != ''">$(QtRccOptions);@(QtRcc_CompressThreshold->'--threshold %(Identity)')</QtRccOptions>
      <QtRccOptions Condition="'@(QtRcc_BinaryOutput)' == 'true'">$(QtRccOptions);--binary</QtRccOptions>
      <QtRccOptions Condition="'@(QtRcc_PassNumber)' != ''">$(QtRccOptions);@(QtRcc_PassNumber->'--pass %(Identity)')</QtRccOptions>
      <QtRccOptions Condition="'@(QtRcc_NoNamespace)' == 'true'">$(QtRccOptions);--namespace</QtRccOptions>
      <QtRccOptions Condition="'@(QtRcc_Verbose)' == 'true'">$(QtRccOptions);--verbose</QtRccOptions>
      <QtRccOptions Condition="'@(QtRcc_List)' == 'true'">$(QtRccOptions);--list</QtRccOptions>
      <QtRccOptions Condition="'@(QtRcc_Project)' == 'true'">$(QtRccOptions);--project</QtRccOptions>
      <QtRccOptions Condition="'@(QtRcc_FormatVersion)' != ''">$(QtRccOptions);@(QtRcc_FormatVersion->'--format-version %(Identity)')</QtRccOptions>
      <QtRccOptions>$(QtRccOptions.Replace(';',' ').Trim())</QtRccOptions>
      <QtRccInputOutdated>%(QtRcc.InputOutdated)</QtRccInputOutdated>
      <QtRccInputOutdated Condition="'@(SelectedFiles)' == ''">%(QtRcc.InputOutdated)</QtRccInputOutdated>
      <QtRccInputOutdated Condition="'@(SelectedFiles)' != ''">true</QtRccInputOutdated>
    </PropertyGroup>
    <FindInList Condition="'$(QtRccInputOutdated)' != 'true'"
      CaseSensitive="false" List="@(QtLog)" ItemSpecToFind="%(QtRcc.Identity)">
      <Output TaskParameter="ItemFound" ItemName="QtRccLogEntry"/>
    </FindInList>
    <PropertyGroup Condition="'@(QtRccLogEntry)' != ''">
      <QtRccLogOptions>%(QtRccLogEntry.Options)</QtRccLogOptions>
    </PropertyGroup>
    <PropertyGroup>
      <QtRccOutdated Condition="'$(QtRccInputOutdated)' == 'true' OR ('$(QtRccLogOptions)' != '' AND '$(QtRccOptions)' != '$(QtRccLogOptions)')">true</QtRccOutdated>
    </PropertyGroup>
    <ItemGroup Condition="'$(QtRccOutdated)' == 'true'">
      <QtLog Remove="%(QtRcc.Identity)"/>
      <QtLog Include="%(QtRcc.Identity)">
        <Options>$(QtRccOptions)</Options>
      </QtLog>
    </ItemGroup>
    <PropertyGroup>
      <QtRccRunParallel Condition="'@(QtRcc)' != '' and '%(QtRcc.ExcludedFromBuild)' != 'true' and '%(QtRcc.ParallelProcess)' == 'true' and '@(SelectedFiles)' == '' and '$(QtRccOutdated)' == 'true'">true</QtRccRunParallel>
      <QtRccRunSingle Condition="'@(QtRcc)' != '' and '%(QtRcc.ExcludedFromBuild)' != 'true' and ('%(QtRcc.ParallelProcess)' != 'true' or '@(SelectedFiles)' != '') and '$(QtRccOutdated)' == 'true'">true</QtRccRunSingle>
    </PropertyGroup>
    <QtWork
      Condition="'$(QtRccRunParallel)' == 'true'"
      WorkFilePath="$(QtWorkFilePath)"
      ExecDescription="%(QtRcc.ExecutionDescription)"
      ExecPath="%(QtRcc.QTDIR)\bin\rcc.exe"
      ExecArguments="$(QtRccOptions)"
      ParallelProcess="true"
      QtDebug="$(QtDebug)"/>
    <QtWork
      Condition="'$(QtRccRunSingle)' == 'true'"
      WorkFilePath="$(QtWorkFilePath)"
      ExecDescription="%(QtRcc.ExecutionDescription)"
      ExecPath="%(QtRcc.QTDIR)\bin\rcc.exe"
      ExecArguments="$(QtRccOptions)"
      ParallelProcess="false"
      QtDebug="$(QtDebug)"/>
    <WriteLinesToFile
      Condition="'$(QtRccRunSingle)' == 'true'"
      File="$(QtLogFilePath)"
      Lines="@(QtLog->'%(Identity)|%(Options)')"
      Overwrite="true"/>
  </Target>
  <Target Name="QtRccPrep" BeforeTargets="QtRcc" Condition="'@(QtRcc)' != ''">
    <Message Importance="High" Condition="'$(QtDebug)' == 'true'" Text="## QtRccPrep @(QtRcc)" />
    <ItemGroup>
      <QtRcc
        Remove="@(QtRcc)"
        Condition="'@(QtRcc)' != '' and '%(QtRcc.ExcludedFromBuild)' == 'true' and '@(SelectedFiles)' == ''"/>
    </ItemGroup>
  </Target>
  <ItemGroup>
    <PropertyPageSchema
      Include="$(MSBuildThisFileDirectory)$(MSBuildThisFileName)uic.xml" />
    <AvailableItemName Include="QtUic">
      <Targets>QtUic</Targets>
    </AvailableItemName>
  </ItemGroup>
  <Target
    Name="QtUicCheckInput"
    Condition="'@(QtUic)' != ''"
    Inputs="%(QtUic.FullPath);%(QtUic.AdditionalDependencies)"
    Outputs="@(QtUic-&gt;'%(OutputFile)')"
    DependsOnTargets="QtRcc">
    <CreateProperty Value="true">
      <Output TaskParameter="ValueSetByTask" PropertyName="QtUicInputOutdated" />
    </CreateProperty>
    <PropertyGroup>
      <QtUicIdentity>%(QtUic.Identity)</QtUicIdentity>
    </PropertyGroup>
    <ItemGroup Condition="'@(QtUic)' != ''">
      <QtUic Condition="'%(QtUic.Identity)'=='$(QtUicIdentity)'">
        <InputOutdated>$(QtUicInputOutdated)</InputOutdated>
      </QtUic>
    </ItemGroup>
  </Target>
  <Target
    Name="QtUicWriteTlogs"
    Condition="'@(QtUic)' != '' and '@(SelectedFiles)' == ''">
    <ItemGroup>
      <QtUicReadTlog Include="^%(QtUic.FullPath);%(QtUic.AdditionalDependencies)"
        Condition="'%(QtUic.ExcludedFromBuild)' != 'true' and '%(QtUic.OutputFile)' != ''"/>
      <QtUicWriteTlog Include="^%(QtUic.FullPath);$([System.IO.Path]::Combine('$(MSBuildProjectDirectory)', '%(QtUic.OutputFile)'))"
        Condition="'%(QtUic.ExcludedFromBuild)' != 'true' and '%(QtUic.OutputFile)' != ''"/>
    </ItemGroup>
    <WriteLinesToFile
      Condition="'@(QtUicReadTlog)' != ''"
      File="$(TLogLocation)QtUic.read.1u.tlog"
      Lines="@(QtUicReadTlog->MetaData('Identity')->ToUpperInvariant());"
      Overwrite="true"
      Encoding="Unicode"/>
    <WriteLinesToFile
      Condition="'@(QtUicWriteTlog)' != ''"
      File="$(TLogLocation)QtUic.write.1u.tlog"
      Lines="@(QtUicWriteTlog->MetaData('Identity')->ToUpperInvariant());"
      Overwrite="true"
      Encoding="Unicode"/>
  </Target>
  <Target
    Name="QtUic"
    BeforeTargets="$(QtUicBeforeTargets)"
    AfterTargets="$(QtUicAfterTargets)"
    Condition="'@(QtUic)' != ''"
    Inputs="%(QtUic.FullPath);%(QtUic.AdditionalDependencies);$(MSBuildProjectFile)"
    Outputs="@(QtUic-&gt;'%(OutputFile)')"
    DependsOnTargets="$(QtUicDependsOn);QtUicCheckInput;QtUicWriteTlogs">
    <Message Importance="High" Condition="'$(QtDebug)' == 'true'" Text="## QtUic @(QtUic)" />
    <ItemGroup Condition="'@(SelectedFiles)' != ''">
      <QtUic Remove="@(QtUic)" Condition="'%(Identity)' != '@(SelectedFiles)'" />
    </ItemGroup>
    <ItemGroup>
      <QtUic_tlog
        Include="%(QtUic.OutputFile)"
        Condition="'%(QtUic.OutputFile)' != '' and '%(QtUic.ExcludedFromBuild)' != 'true'">
        <Source>@(QtUic, '|')</Source>
      </QtUic_tlog>
    </ItemGroup>
    <WriteLinesToFile
      Condition="'@(QtUic_tlog)' != '' and '%(QtUic_tlog.ExcludedFromBuild)' != 'true'"
      File="$(TLogLocation)$(ProjectName).write.1u.tlog"
      Lines="^%(QtUic_tlog.Source);@(QtUic_tlog-&gt;'%(Fullpath)')"
      Encoding="Unicode"/>
    <MakeDir
      Condition="'@(QtUic)' != '' and '%(QtUic.ExcludedFromBuild)' != 'true'"
      Directories="$([System.IO.Path]::GetDirectoryName(%(QtUic.OutputFile)))"/>
    <ItemGroup>
      <QtUic_InputFile Condition="'%(QtUic.InputFile)' != ''" Include="%(QtUic.InputFile)"/>
      <QtUic_OutputFile Condition="'%(QtUic.OutputFile)' != ''" Include="%(QtUic.OutputFile)"/>
      <QtUic_DisplayDependencies Condition="'%(QtUic.DisplayDependencies)' != ''" Include="%(QtUic.DisplayDependencies)"/>
      <QtUic_NoProtection Condition="'%(QtUic.NoProtection)' != ''" Include="%(QtUic.NoProtection)"/>
      <QtUic_NoImplicitIncludes Condition="'%(QtUic.NoImplicitIncludes)' != ''" Include="%(QtUic.NoImplicitIncludes)"/>
      <QtUic_Postfix Condition="'%(QtUic.Postfix)' != ''" Include="%(QtUic.Postfix)"/>
      <QtUic_Translate Condition="'%(QtUic.Translate)' != ''" Include="%(QtUic.Translate)"/>
      <QtUic_Include Condition="'%(QtUic.Include)' != ''" Include="%(QtUic.Include)"/>
      <QtUic_Generator Condition="'%(QtUic.Generator)' != ''" Include="%(QtUic.Generator)"/>
      <QtUic_IdBased Condition="'%(QtUic.IdBased)' != ''" Include="%(QtUic.IdBased)"/>
    </ItemGroup>
    <PropertyGroup>
      <QtUicOptions Condition="'@(QtUic_InputFile)' != ''">$(QtUicOptions);@(QtUic_InputFile->'&quot;%(Identity)&quot;')</QtUicOptions>
      <QtUicOptions Condition="'@(QtUic_OutputFile)' != ''">$(QtUicOptions);@(QtUic_OutputFile->'-o &quot;%(Identity)&quot;')</QtUicOptions>
      <QtUicOptions Condition="'@(QtUic_DisplayDependencies)' == 'true'">$(QtUicOptions);--dependencies</QtUicOptions>
      <QtUicOptions Condition="'@(QtUic_NoProtection)' == 'true'">$(QtUicOptions);--no-protection</QtUicOptions>
      <QtUicOptions Condition="'@(QtUic_NoImplicitIncludes)' == 'true'">$(QtUicOptions);--no-implicit-includes</QtUicOptions>
      <QtUicOptions Condition="'@(QtUic_Postfix)' != ''">$(QtUicOptions);@(QtUic_Postfix->'--postfix %(Identity)')</QtUicOptions>
      <QtUicOptions Condition="'@(QtUic_Translate)' != ''">$(QtUicOptions);@(QtUic_Translate->'--tr %(Identity)')</QtUicOptions>
      <QtUicOptions Condition="'@(QtUic_Include)' != ''">$(QtUicOptions);@(QtUic_Include->'--include &quot;%(Identity)&quot;')</QtUicOptions>
      <QtUicOptions Condition="'@(QtUic_Generator)' != ''">$(QtUicOptions);@(QtUic_Generator->'-g %(Identity)')</QtUicOptions>
      <QtUicOptions Condition="'@(QtUic_IdBased)' == 'true'">$(QtUicOptions);--idbased</QtUicOptions>
      <QtUicOptions>$(QtUicOptions.Replace(';',' ').Trim())</QtUicOptions>
      <QtUicInputOutdated>%(QtUic.InputOutdated)</QtUicInputOutdated>
      <QtUicInputOutdated Condition="'@(SelectedFiles)' == ''">%(QtUic.InputOutdated)</QtUicInputOutdated>
      <QtUicInputOutdated Condition="'@(SelectedFiles)' != ''">true</QtUicInputOutdated>
    </PropertyGroup>
    <FindInList Condition="'$(QtUicInputOutdated)' != 'true'"
      CaseSensitive="false" List="@(QtLog)" ItemSpecToFind="%(QtUic.Identity)">
      <Output TaskParameter="ItemFound" ItemName="QtUicLogEntry"/>
    </FindInList>
    <PropertyGroup Condition="'@(QtUicLogEntry)' != ''">
      <QtUicLogOptions>%(QtUicLogEntry.Options)</QtUicLogOptions>
    </PropertyGroup>
    <PropertyGroup>
      <QtUicOutdated Condition="'$(QtUicInputOutdated)' == 'true' OR ('$(QtUicLogOptions)' != '' AND '$(QtUicOptions)' != '$(QtUicLogOptions)')">true</QtUicOutdated>
    </PropertyGroup>
    <ItemGroup Condition="'$(QtUicOutdated)' == 'true'">
      <QtLog Remove="%(QtUic.Identity)"/>
      <QtLog Include="%(QtUic.Identity)">
        <Options>$(QtUicOptions)</Options>
      </QtLog>
    </ItemGroup>
    <PropertyGroup>
      <QtUicRunParallel Condition="'@(QtUic)' != '' and '%(QtUic.ExcludedFromBuild)' != 'true' and '%(QtUic.ParallelProcess)' == 'true' and '@(SelectedFiles)' == '' and '$(QtUicOutdated)' == 'true'">true</QtUicRunParallel>
      <QtUicRunSingle Condition="'@(QtUic)' != '' and '%(QtUic.ExcludedFromBuild)' != 'true' and ('%(QtUic.ParallelProcess)' != 'true' or '@(SelectedFiles)' != '') and '$(QtUicOutdated)' == 'true'">true</QtUicRunSingle>
    </PropertyGroup>
    <QtWork
      Condition="'$(QtUicRunParallel)' == 'true'"
      WorkFilePath="$(QtWorkFilePath)"
      ExecDescription="%(QtUic.ExecutionDescription)"
      ExecPath="%(QtUic.QTDIR)\bin\uic.exe"
      ExecArguments="$(QtUicOptions)"
      ParallelProcess="true"
      QtDebug="$(QtDebug)"/>
    <QtWork
      Condition="'$(QtUicRunSingle)' == 'true'"
      WorkFilePath="$(QtWorkFilePath)"
      ExecDescription="%(QtUic.ExecutionDescription)"
      ExecPath="%(QtUic.QTDIR)\bin\uic.exe"
      ExecArguments="$(QtUicOptions)"
      ParallelProcess="false"
      QtDebug="$(QtDebug)"/>
    <WriteLinesToFile
      Condition="'$(QtUicRunSingle)' == 'true'"
      File="$(QtLogFilePath)"
      Lines="@(QtLog->'%(Identity)|%(Options)')"
      Overwrite="true"/>
  </Target>
  <Target Name="QtUicPrep" BeforeTargets="QtUic" Condition="'@(QtUic)' != ''">
    <Message Importance="High" Condition="'$(QtDebug)' == 'true'" Text="## QtUicPrep @(QtUic)" />
    <ItemGroup>
      <QtUic
        Remove="@(QtUic)"
        Condition="'@(QtUic)' != '' and '%(QtUic.ExcludedFromBuild)' == 'true' and '@(SelectedFiles)' == ''"/>
    </ItemGroup>
  </Target>
  <UsingTask
    TaskName="QtWork"
    TaskFactory="CodeTaskFactory"
    AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <WorkFilePath ParameterType="System.String" Required="true" />
      <ExecDescription ParameterType="System.String" Required="true" />
      <ExecPath ParameterType="System.String" Required="true" />
      <ExecArguments ParameterType="System.String" Required="true" />
      <ParallelProcess ParameterType="System.Boolean" Required="true" />
      <QtDebug ParameterType="System.Boolean" Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System"/>
      <Using Namespace="System.IO"/>
      <Using Namespace="System.Diagnostics"/>
      <Code Type="Fragment" Language="cs">
        <![CDATA[
            bool ok = true;
            if (ParallelProcess) {
                File.AppendAllText(WorkFilePath,
                    string.Format("{0};{1};{2}\r\n", ExecDescription, ExecPath, ExecArguments));
            } else {
                Log.LogMessage(MessageImportance.High, ExecDescription);
                var procInfo = new ProcessStartInfo
                {
                    FileName = ExecPath,
                    CreateNoWindow = true,
                    UseShellExecute = false,
                    RedirectStandardError = true,
                    RedirectStandardOutput = true,
                    Arguments = ExecArguments
                };
                Process childProcess = null;
                try {
                    childProcess = Process.Start(procInfo);
                    childProcess.OutputDataReceived +=
                        (object sender, DataReceivedEventArgs e) => {
                            if (!string.IsNullOrEmpty(e.Data))
                                Log.LogMessage(MessageImportance.High, e.Data);
                        };
                    childProcess.ErrorDataReceived +=
                        (object sender, DataReceivedEventArgs e) => {
                            if (!string.IsNullOrEmpty(e.Data))
                                Log.LogMessage(MessageImportance.High, e.Data);
                        };
                    childProcess.BeginOutputReadLine();
                    childProcess.BeginErrorReadLine();
                } catch (Exception e) {
                    Log.LogMessage(
                        MessageImportance.High,
                        string.Format("Error starting process {0}: {1}", ExecPath, e.Message));
                    ok = false;
                }
                if (ok) {
                    childProcess.WaitForExit();
                    int exitCode = childProcess.ExitCode;
                    childProcess.Close();
                    if (exitCode != 0)
                        ok = false;
                }
            }
            if (!ok)
                return false;
        ]]>
      </Code>
    </Task>
  </UsingTask>
  <UsingTask
    TaskName="QtFinalize"
    TaskFactory="CodeTaskFactory"
    AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <WorkFilePath ParameterType="System.String" Required="true" />
      <MaxProcs ParameterType="System.Int32" Required="true" />
      <QtDebug ParameterType="System.Boolean" Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System"/>
      <Using Namespace="System.IO"/>
      <Using Namespace="System.Diagnostics"/>
      <Using Namespace="System.Collections.Generic"/>
      <Code Type="Fragment" Language="cs">
        <![CDATA[

            if (!File.Exists(WorkFilePath))
                return true;

            Queue<Process> childRunningProcs = new Queue<Process>();
            bool ok = true;
            foreach (var qtCmdLin in File.ReadLines(WorkFilePath)) {

                if (!ok)
                    break;

                string[] qtCmdCol = qtCmdLin.Split(new char[] { ';' });
                if (qtCmdCol.Length < 3) {
                    ok = false;
                    break;
                }

                Log.LogMessage(MessageImportance.High, qtCmdCol[0]);

                var procInfo = new ProcessStartInfo
                {
                    FileName = qtCmdCol[1],
                    CreateNoWindow = true,
                    UseShellExecute = false,
                    RedirectStandardError = true,
                    RedirectStandardOutput = true,
                    Arguments = qtCmdCol[2]
                };
                try {
                    var childProcess = Process.Start(procInfo);
                    childProcess.OutputDataReceived +=
                        (object sender, DataReceivedEventArgs e) => {
                            if (!string.IsNullOrEmpty(e.Data))
                                Log.LogMessage(MessageImportance.High, e.Data);
                        };
                    childProcess.ErrorDataReceived +=
                        (object sender, DataReceivedEventArgs e) => {
                            if (!string.IsNullOrEmpty(e.Data))
                                Log.LogMessage(MessageImportance.High, e.Data);
                        };
                    childProcess.BeginOutputReadLine();
                    childProcess.BeginErrorReadLine();
                    childRunningProcs.Enqueue(childProcess);
                } catch (Exception e) {
                    Log.LogMessage(
                        MessageImportance.High,
                        string.Format("Error starting process {0}: {1}", qtCmdCol[1], e.Message));
                    ok = false;
                }

                while (ok
                    && childRunningProcs.Count > 0
                    && (childRunningProcs.Peek().HasExited
                    || childRunningProcs.Count >= MaxProcs)) {
                    var childRunningProcess = childRunningProcs.Dequeue();
                    childRunningProcess.WaitForExit();
                    int exitCode = childRunningProcess.ExitCode;
                    childRunningProcess.Close();
                    if (exitCode != 0)
                        ok = false;
                }
            }

            foreach (var childRunningProcess in childRunningProcs) {
                childRunningProcess.WaitForExit();
                int exitCode = childRunningProcess.ExitCode;
                childRunningProcess.Close();
                if (exitCode != 0) {
                    ok = false;
                }
            }

            if (!ok)
                return false;

        ]]>
      </Code>
    </Task>
  </UsingTask>
  <Target Name="QtFinalize"
    AfterTargets="CustomBuild"
    BeforeTargets="ClCompile"
    DependsOnTargets="QtUic">
    <Message Importance="High" Condition="'$(QtDebug)' == 'true'" Text="## QtFinalize" />
    <QtFinalize WorkFilePath="$(QtWorkFilePath)" MaxProcs="$(QtMaxProcs)" QtDebug="$(QtDebug)"/>
    <Message Importance="High" Condition="'$(QtDebug)' == 'true'" Text="# END Qt" />
    <WriteLinesToFile
      File="$(QtLogFilePath)"
      Lines="@(QtLog->'%(Identity)|%(Options)')"
      Overwrite="true"/>
  </Target>
  <Target Name="QtDebug">
    <PropertyGroup>
      <QtDebug>true</QtDebug>
    </PropertyGroup>
    <CallTarget Targets="QtFinalize"/>
  </Target>
  <PropertyGroup>
    <CleanDependsOn>
      $(CleanDependsOn);
      QtClean;
    </CleanDependsOn>
    <BuildDependsOn>
      QtDynamicSources;
      $(BuildDependsOn)
    </BuildDependsOn>
  </PropertyGroup>
  <Target Name="QtClean">
    <Delete
      Files="@(QtMoc->'%(OutputFile)');@(QtRcc->'%(OutputFile)');@(QtUic->'%(OutputFile)')" />
    <Delete
      Files="$(QtWorkFilePath);$(QtLogFilePath)"/>
  </Target>
  <Target Name="QtDynamicSources">
    <ItemGroup>
      <ClCompile
        Condition="'%(QtMoc.ExcludedFromBuild)' != 'true' and '%(QtMoc.DynamicSource)' == 'output'"
        Include="@(QtMoc->'%(OutputFile)')" />
      <ClCompile
        Condition="'%(QtMoc.ExcludedFromBuild)' != 'true' and '%(QtMoc.DynamicSource)' == 'input'"
        Include="@(QtMoc->'%(InputFile)')" />
    </ItemGroup>
    <ItemGroup>
      <ClCompile
        Condition="'%(QtRcc.ExcludedFromBuild)' != 'true' and '%(QtRcc.DynamicSource)' == 'output'"
        Include="@(QtRcc->'%(OutputFile)')">
        <PrecompiledHeader>NotUsing</PrecompiledHeader>
      </ClCompile>
    </ItemGroup>
  </Target>
</Project>
